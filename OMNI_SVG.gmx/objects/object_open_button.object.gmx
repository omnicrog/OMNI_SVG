<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_open_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>payload="";
state="";
iterator=0;
tags=0;
package="";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state){
case"processing":
    if(string_count("&lt;",package)&gt;1){
        next_pos=/*0;*/
        string_pos("&lt;",string_delete(package,1,1));
        /*for(ii=2;ii&lt;string_length(package);ii++){
            if(string_char_at(package,ii)=="&lt;"){
                next_pos=ii-1;
                break;
            }
        }*/
        tags[iterator,0]=string_copy(package,1,next_pos);
        package=string_delete(package,1,next_pos);
        show_debug_message(string(tags[iterator,0]));
        iterator+=1;
        
        
    }
    else
    if(string_count("&lt;",package)==1){
        tags[iterator,0]=string_copy(package,1,string_length(package));
        package=string_delete(package,1,string_length(package));
        state="processed";
        show_debug_message(string(tags[iterator,0]));
    }
    as =array_height_2d(tags);
    ts =string_count("&gt;",payload);
    show_debug_message(string(as)+"/"+string(ts));
    if (as==ts){
        iterator=0;
    }
break;
case"processed":
    show_message("processed");
    state="";
break;
default:break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name=get_open_filename(".svg","untitled.svg");
tags=0;
if (name!=""){
    object_filename.name = name;
    
    myfile = file_text_open_read(name);
    payload="";
    while(!file_text_eof(myfile)){
        text = file_text_readln(myfile);
        payload=payload+text;
    }
    file_text_close(myfile);
    package=payload;
    key="8K5GheMN3sbwYxxCJazwwIUdd798Q5pWwTfnSsRsP-xP--aGC_fjuoU4JgXevs8vJy2gvLoXWAA9zmVHGF8eZw";
    post = http_get("https://api.cloudconvert.com/process/?inputformat=svg&amp;outputformat=png&amp;apikey="+key);
    file_loaded=true;
    state="processing";
    show_debug_message("processing....");
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r_str = "null";
 if (ds_map_find_value(async_load, "id") == post)
    {
    if (ds_map_find_value(async_load, "status") == 0)
       {
            r_str = ds_map_find_value(async_load, "result");
       }
    }

show_message(r_str);
clipboard_set_text(r_str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
